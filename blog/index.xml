<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Thomas Tiveron</title>
    <link>http://tiveron.ca/blog/</link>
    <description>Recent content in Blogs on Thomas Tiveron</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>thomas@tiveron.ca (Thomas Tiveron)</managingEditor>
    <webMaster>thomas@tiveron.ca (Thomas Tiveron)</webMaster>
    <lastBuildDate>Wed, 29 Jun 2016 00:06:35 -0400</lastBuildDate>
    <atom:link href="http://tiveron.ca/blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Learning CSharp</title>
      <link>http://tiveron.ca/blog/learning-csharp/</link>
      <pubDate>Wed, 29 Jun 2016 00:06:35 -0400</pubDate>
      <author>thomas@tiveron.ca (Thomas Tiveron)</author>
      <guid>http://tiveron.ca/blog/learning-csharp/</guid>
      <description>&lt;h2&gt; Should I Learn C#? &lt;/h2&gt;

&lt;p&gt;Why should you choose to learn C# out of all the other languages? Perhaps you are trying to decided between it and Java, or Python, or C, or JavaScript, or [insert other great language choice].
Well quite simply you should choose C# to learn now, because C# is the best! &amp;hellip; Is what I wish I could say, but truly there are many different programming languages and most have varying pros and cons for many applications. With the disclaimer that there is certainly no &amp;ldquo;best&amp;rdquo;, C# has many great features and is a good beginner language. People smarter than I have written great and thorough articles on why to choose C#, linked below is just a small sampling. I didn&amp;rsquo;t want to repeat them here, but have summarized what I think are some great points below. Additionally, I have included some content to get you on your way learning C#.&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;Sampling of why you should learn C# references:&lt;/h4&gt;
 - &lt;a href=&#34;http://www.bestprogramminglanguagefor.me/why-learn-c-sharp&#34; title=&#34;Best Programming Language For Me - C#&#34;&gt;Why Learn C#&lt;/a&gt;
 &lt;br&gt;
 - &lt;a href=&#34;https://www.opensesame.com/blog/six-reasons-why-you-should-learn-c&#34; title=&#34;OpenSesame - 6 Reason to Learn C#&#34;&gt;6 Reasons To Learn C#&lt;/a&gt;
 &lt;br&gt;
 - &lt;a href=&#34;http://www.hanselman.com/blog/IfYouHadToStartOverWhatTechnologiesWouldYouLearnIn2014.aspx&#34; title=&#34;Scott Hanselman - If you had to start over learning...&#34;&gt;If You Had To Start Over Learning&amp;hellip; &lt;/a&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;TL;DR&lt;/h4&gt;
&lt;strong&gt;Common syntax&lt;/strong&gt; - you&amp;rsquo;ll get used to {curly braces}. This should help make it easier for you to read other curly brace languages, at least enough to get the gist of what the code is doing. This is very helpful, as sometimes you will only be able to find code examples in other languages, so being able to quickly interpret other code and get your C# code underway is a big bonus.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;High level language&lt;/strong&gt; - takes care of a lot of the little details and lets you get going. Now this isn&amp;rsquo;t to say it handles everything for you, but you will get good mileage.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Huge community&lt;/strong&gt; - If you are unfamiliar with &lt;a href=&#34;https://stackoverflow.com/&#34; title=&#34;Stack Overflow&#34;&gt;Stack Overflow&lt;/a&gt;, you soon won&amp;rsquo;t be! C# has the 4th largest community on Stack Overflow. This means if you have a problem, someone else probably has had it too, and you can find a solution here quickly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You can write pretty much anything, anywhere&lt;/strong&gt; - Microsoft loves open source if you hadn&amp;rsquo;t heard! With the release of &lt;a href=&#34;https://dotnet.github.io/&#34; title=&#34;.Net Core&#34;&gt;.Net Core&lt;/a&gt;, and &lt;a href=&#34;https://code.visualstudio.com/&#34; title=&#34;Visual Studio Code&#34;&gt;Visual Studio - Code&lt;/a&gt; you can now program C# on any platform in Microsoft&amp;rsquo;s &amp;ldquo;best&amp;rdquo; C# IDE Visual Studio. This means yes to Windows, Mac OS X, and Linux; and this means yes to desktop, web, and mobile applications.&lt;/p&gt;

&lt;h2&gt; Getting Started Learning C# &lt;/h2&gt;

&lt;p&gt;Everyone learns differently so I&amp;rsquo;m going to include a couple different methods for learning C# which hopefully you will find useful.&lt;/p&gt;

&lt;p&gt;I got started learning C# with the course &lt;a href=&#34;https://mva.microsoft.com/en-US/training-courses/c-fundamentals-for-absolute-beginners-16169?l=Lvld4EQIC_2706218949&#34; title=&#34;C# on MVA&#34;&gt;C# For Beginners on Microsoft Virtual Academy&lt;/a&gt;. Microsoft Virtual Academy has a plethora of free content to help anyone at any level get underway with many Microsoft technologies, and the best part is it is all free! This is probably the best way to get your feet wet with C#, it has around 8 hours of video tutorials, split into 24 modules, with 21 assessments. The 24 modules are great for when you are busy and can&amp;rsquo;t allocate a big chunk of time to learning all at once. Just complete a module or two when you can.&lt;/p&gt;

&lt;p&gt;Now I haven&amp;rsquo;t tried this one myself, but if you tend to learn more through reading another free learning service by Microsoft is &lt;a href=&#34;https://www.microsoft.com/net/tutorials/csharp/getting-started&#34; title=&#34;Getting Started with C#&#34;&gt;Getting Started with C#&lt;/a&gt;. This text based tutorial appears to cover many of the same topics as the Microsoft Virtual Academy course. This could also be a great option for learning on the go on your mobile or if you live in a region with slow or intermittent internet access. These tutorials will even get you coding C# right in the browser, no need to download anything!&lt;/p&gt;

&lt;p&gt;Well there you have it, you should consider learning C# as it has a bright future and seems like it should be an in demand language for years to come. Microsoft&amp;rsquo;s recent moves to open source the .Net Framework and huge cross platform support will only increase C#&amp;rsquo;s popularity.&lt;/p&gt;

&lt;p&gt;I hope that the links above help you get started on C# and stay tuned for how to take your C# skills to the next level!&lt;/p&gt;

&lt;p&gt;Thanks for reading,&lt;/p&gt;

&lt;p&gt;Thomas&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
&lt;br&gt;
Pssssst!
&lt;br&gt; If you want a &amp;lsquo;#&amp;rsquo; in a markdown headings you use HTML tags:
&lt;br&gt; &amp;ldquo;&amp;lt;h2&amp;gt; Should I Learn C#? &amp;lt;/h2&amp;gt;&amp;rdquo;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Thomas&#39;s First Tech Blog Post</title>
      <link>http://tiveron.ca/blog/getting-started-blogging/</link>
      <pubDate>Wed, 22 Jun 2016 23:46:35 -0400</pubDate>
      <author>thomas@tiveron.ca (Thomas Tiveron)</author>
      <guid>http://tiveron.ca/blog/getting-started-blogging/</guid>
      <description>

&lt;h2 id=&#34;so-i-ve-started-my-blog&#34;&gt;So I&amp;rsquo;ve started my blog!&lt;/h2&gt;

&lt;h1 id=&#34;toc_1&#34;&gt;&amp;hellip;&lt;/h1&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;&amp;hellip;&lt;/h2&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Now for the content, hold onto your seats people.&lt;/p&gt;

&lt;p&gt;As a big podcast fan (&lt;a href=&#34;https://player.fm/ttiveron/fm&#34; title=&#34;Thomas&#39;s PlayerFM Channel&#34;&gt;check out my PlayerFM channel&lt;/a&gt;),
I often heard the benefits of sharing your knowledge from many people, such as &lt;a href=&#34;https://twitter.com/shanselman&#34;&gt;Scott Hanselman&lt;/a&gt;, and &lt;a href=&#34;https://twitter.com/jsonmez&#34;&gt;Jon Sonmez&lt;/a&gt;.
They preach that sharing your journey will not only help you retain what you are learning, create an excellent portfolio, but you may also help/inspire someone else to tackle new challenges.&lt;/p&gt;

&lt;p&gt;So I decided to leap and started this blog a little over a month ago, but like anyone who likes to tinker with technology, I took the long road.&lt;/p&gt;

&lt;h3 id=&#34;domains-hosting-servers-cms-oh-wow&#34;&gt;Domains, Hosting, Servers, CMS, Oh WOW&lt;/h3&gt;

&lt;p&gt;The first technical challenge which will siphon hours of Google research is where will your blog live??&lt;/p&gt;

&lt;p&gt;I knew I wanted my own domain and settled on &lt;a href=&#34;https://www.namecheap.com/&#34; title=&#34;Namescheap&#34;&gt;Namecheap&lt;/a&gt; because they had the best value for domain registration and email hosting.
Some services offer many more features, but seeing as I will not be requiring a lot of features for this simple blog, Namecheap&amp;rsquo;s offering was perfect.&lt;/p&gt;

&lt;p&gt;Following my domain purchase and email setup, I stared down the barrel of hosting options and blogging platforms.&lt;/p&gt;

&lt;p&gt;I reviewed hosting with Dreamhost, Digital Ocean, and a few others. I reviewed VPS options like Azure, and Linode (wouldn&amp;rsquo;t it be fun to admin a Linux server!).
And I considered your classic WordPress, and the new blogging focused Ghost platforms.
But at the end of the day, I didn&amp;rsquo;t really want to have to start paying for a hosting subscription at the start, and then I stumbled upon &lt;a href=&#34;https://pages.github.com/&#34; title=&#34;Github Pages&#34;&gt;Github Pages&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;github-pages-and-static-site-generators&#34;&gt;Github Pages and Static Site Generators&lt;/h3&gt;

&lt;p&gt;Github Pages will serve the content in a Github repository as a website, with the catch that everything in the repository has to be static.
So while you could create the content and HTML of each page, you can use a static site generator to take care of the HTML for you!&lt;/p&gt;

&lt;p&gt;Now here is where the real fun begins, choosing a static site generator.
&lt;a href=&#34;https://www.staticgen.com/&#34; title=&#34;StaticGen&#34;&gt;StaticGen&lt;/a&gt; tracks the top Open-Source static site generators and their list contains well over 100!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://hexo.io/&#34; title=&#34;Hexo&#34;&gt;Hexo.io&lt;/a&gt; was my first static generator. I chose Hexo, because it ranked high on the  list of generators and runs a node.js server.
I do not have much experience with JavaScript, but I felt that if I needed to code something to go along with node.js it would be good experience.
Unfortunately, my love of Hexo was short lived. They have great tutorials, and I was able to get my site up very quickly, but when I wanted to dig into the theme and make some changes things got tricky.
Hexo themes use either the template language EmbeddedJavaScript (EJS) or Swig, and I&amp;rsquo;m currently not interested in learning either of these.
Thus, while I was able to get my Hexo site up and running smoothly, I didn&amp;rsquo;t want to tackle their foreign templating language just to make theme changes.&lt;/p&gt;

&lt;p&gt;So I moved onto the next generator.&lt;/p&gt;

&lt;p&gt;Seeing that some experience with the underlying language may be advantageous I decided to try &lt;a href=&#34;http://wyam.io/&#34; title=&#34;Wyam&#34;&gt;Wyam.io&lt;/a&gt; next.
Wyam is a static &lt;em&gt;content&lt;/em&gt; generator written entirely in .NET, and allows for templating in Markdown and Razor. I used Wyam for a couple of days before deciding it was too complex.
Wyam is a lot more than just a static site (simple blog) generator. Wyam is used by chaining together flexible modules to produce your end product,
and while you can create a website this way it seemed like overkill (to me).&lt;/p&gt;

&lt;p&gt;Finally, I stumbled upon &lt;a href=&#34;http://gohugo.io/&#34; title=&#34;Hugo&#34;&gt;goHugo.io&lt;/a&gt; (another .io)!
Hugo is very similar to Hexo. Both have great documentation, easy setup guides, and awesome themes.
Hugo was different for me because the entire application is written in Go. While Go is vastly less popular than JavaScript, I have been trying to find time to use Go all year.
Hugo&amp;rsquo;s themes use Go templating and they have a great primer in their documentation. So far the minor changes I have wanted to make have been pretty simple.
It feels more like I&amp;rsquo;m making simple HTML changes, with the power of Go objects and conditionals.
Finally, another important aspect to me was that with Hugo you create your content in Markdown files.&lt;/p&gt;

&lt;p&gt;There you have it, a short summary of the meandering trail I took to get here.&lt;/p&gt;

&lt;p&gt;If you have any questions about my choices feel free to reach out to me with any of the links below.&lt;/p&gt;

&lt;p&gt;Thanks for reading,&lt;/p&gt;

&lt;p&gt;Thomas&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>